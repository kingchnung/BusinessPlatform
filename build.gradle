plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bizmate'
version = '0.0.1-SNAPSHOT'
description = 'webBizMateProject project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Spring Boot 기본
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.hibernate.orm:hibernate-envers"
    implementation "org.springframework.data:spring-data-envers"

    // ✅ JSON 처리
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // ✅ 모델 매퍼
    implementation 'org.modelmapper:modelmapper:3.2.1'

    // ✅ Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // ✅ DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ✅ Oracle DB
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

    // ✅ JWT (io.jsonwebtoken)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ✅ 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Querydsl JPA
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

    // Querydsl Annotation Processor (Java 17+ 및 Jakarta EE 9+)
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// Gradle 빌드 시 Q-Type 클래스 자동 생성을 위한 설정
def generated = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [ generated ]    // 생성된 소스도 컴파일 소스에 포함
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))    // 여기에 생성
}

clean.doLast {
    file(generated).deleteDir()  // clean 시 해당 폴더 삭제
}

tasks.named('test') {
    useJUnitPlatform()
}